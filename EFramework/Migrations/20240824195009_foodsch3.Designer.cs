// <auto-generated />
using System;
using EFramework.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EFramework.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240824195009_foodsch3")]
    partial class foodsch3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Drink", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR");

                    b.Property<double>("Price")
                        .HasPrecision(15, 2)
                        .HasColumnType("float(15)");

                    b.HasKey("Id");

                    b.ToTable("Drinks", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationTime = new DateTime(2024, 8, 24, 22, 50, 8, 713, DateTimeKind.Local).AddTicks(3303),
                            IsDeleted = false,
                            Name = "Coca-Cola",
                            Price = 5.0
                        },
                        new
                        {
                            Id = 2,
                            CreationTime = new DateTime(2024, 8, 24, 22, 50, 8, 713, DateTimeKind.Local).AddTicks(4786),
                            IsDeleted = false,
                            Name = "Pepsi",
                            Price = 4.5
                        },
                        new
                        {
                            Id = 3,
                            CreationTime = new DateTime(2024, 8, 24, 22, 50, 8, 713, DateTimeKind.Local).AddTicks(4840),
                            IsDeleted = false,
                            Name = "Sprite",
                            Price = 4.0
                        });
                });

            modelBuilder.Entity("Domain.Food", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR");

                    b.Property<double>("Price")
                        .HasPrecision(15, 2)
                        .HasColumnType("float(15)");

                    b.HasKey("Id");

                    b.ToTable("Foods", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationTime = new DateTime(2024, 8, 24, 22, 50, 8, 714, DateTimeKind.Local).AddTicks(4251),
                            IsDeleted = false,
                            Name = "Burger",
                            Price = 10.0
                        },
                        new
                        {
                            Id = 2,
                            CreationTime = new DateTime(2024, 8, 24, 22, 50, 8, 714, DateTimeKind.Local).AddTicks(4302),
                            IsDeleted = false,
                            Name = "Pizza",
                            Price = 20.0
                        },
                        new
                        {
                            Id = 3,
                            CreationTime = new DateTime(2024, 8, 24, 22, 50, 8, 714, DateTimeKind.Local).AddTicks(4309),
                            IsDeleted = false,
                            Name = "Fries",
                            Price = 30.0
                        },
                        new
                        {
                            Id = 4,
                            CreationTime = new DateTime(2024, 8, 24, 22, 50, 8, 714, DateTimeKind.Local).AddTicks(4313),
                            IsDeleted = false,
                            Name = "Sandwich",
                            Price = 40.0
                        },
                        new
                        {
                            Id = 5,
                            CreationTime = new DateTime(2024, 8, 24, 22, 50, 8, 714, DateTimeKind.Local).AddTicks(4317),
                            IsDeleted = false,
                            Name = "Pasta",
                            Price = 50.0
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
